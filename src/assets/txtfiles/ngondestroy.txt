<-----------Parent Component---------->

// HTML

<div class="col-6">
    <div class="alert alert-primary">
        <b>Parent Component</b> <br>
        <button class="btn btn-sm btn-info" (click)="toggle()">Toggle Counter</button>
    </div>
    <div class="alert alert-warning">
        <b>Child Component</b>
        <app-child *ngIf="showCounter"></app-child>
    </div>
</div>

// TS

import { Component } from "@angular/core";
import { RouterModule } from "@angular/router";
import { HooksOrderComponent } from "../hooks-order/hooks-order.component";
// import child
import { ChildComponent } from "./child/child.component";
import { CommonModule } from "@angular/common";
import { HttpClient, HttpClientModule } from "@angular/common/http";
@Component({
  selector: "app-ngondestroy",
  standalone: true,
  imports: [RouterModule, HooksOrderComponent, ChildComponent, CommonModule, HttpClientModule],
  templateUrl: "./ngondestroy.component.html",
  styleUrls: ["./ngondestroy.component.scss"]
})

export class NgondestroyComponent {
  showCounter = true;
  tsCode = '';
  constructor(private http: HttpClient) {
    this.http.get('../../../assets/txtfiles/ngondestroy.txt', { responseType: 'text' })
      .subscribe(code => this.tsCode = code);
  }

  toggle() {
    this.showCounter = !this.showCounter;
  }
}


<------------ Child Component ------------->

// HTML

<div class="container card">
    <h4>Child component works!</h4>
    <p>{{counter}}</p>
</div>

// TS

import { Component, OnInit, OnDestroy } from "@angular/core";

@Component({
  selector: "app-child",
  standalone:true,
  templateUrl: "./child.component.html",
  styleUrls: ["./child.component.scss"]
})

export class ChildComponent implements OnInit, OnDestroy {

  counter = 0;
  timer!: any;

  ngOnInit() {
    console.log('âœ… CounterComponent Created');
    this.timer = setInterval(() => {
      this.counter++;
    }, 1000);
    console.log(this.timer)
  }

  ngOnDestroy() {
    console.log('ðŸ§¹ CounterComponent Destroyed');
    clearInterval(this.timer);
  }
}
